/*! For license information please see main.916087239f27e366ddc1.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio_v2("main",{"./app/components/Canvas/Detail/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var i=s("./node_modules/ogl/src/core/Program.js"),h=s("./node_modules/ogl/src/core/Mesh.js"),a=s("./node_modules/gsap/index.js"),r=s("./app/shaders/plane-fragment.glsl"),o=s("./app/shaders/plane-vertex.glsl");class n{constructor({element:e,geometry:t,gl:s,index:i,scene:h,sizes:a}){this.element=e,this.gl=s,this.geometry=t,this.scene=h,this.index=i,this.sizes=a,this.extra={x:0,y:0},this.scroll={current:0,target:0,last:0,limit:0},this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this.sizes})}createTexture(){const e=this.element.querySelector(".detail__media__image");this.texture=window.TEXTURES[e.getAttribute("data-src")]}createProgram(){this.program=new i.Program(this.gl,{fragment:r,vertex:o,uniforms:{uAlpha:{value:0},tMap:{value:this.texture}}})}createMesh(){this.mesh=new h.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}show(){a.default.fromTo(this.program.uniforms.uAlpha,{value:0},{value:1})}hide(){a.default.to(this.program.uniforms.uAlpha,{value:0})}onResize(e,t){this.extra={x:0,y:0},this.createBounds(e),this.updateX(t&&t.x),this.updateY(t&&t.y)}updateScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(e=0){this.y=(this.bounds.top-e)/window.innerHeight,this.mesh.position.y=-(-this.sizes.height/2+this.mesh.scale.y/2+this.y*this.sizes.height+this.extra.y)}update(e){this.updateY(e)}}}},(function(e){e.h=()=>"6dc0c831c99345d5ae51"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi45MTYwODcyMzlmMjdlMzY2ZGRjMS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MFZBT2UsTUFBTUEsRUFDbkJDLGFBQVksUUFBRUMsRUFBTyxTQUFFQyxFQUFRLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLE1BQUVDLElBQ2pEQyxLQUFLTixRQUFVQSxFQUNmTSxLQUFLSixHQUFLQSxFQUNWSSxLQUFLTCxTQUFXQSxFQUNoQkssS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0QsTUFBUUEsRUFFYkMsS0FBS0MsTUFBUSxDQUNYQyxFQUFHLEVBQ0hDLEVBQUcsR0FHTEgsS0FBS0ksT0FBUyxDQUNaQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBTSxFQUNOQyxNQUFPLEdBR1RSLEtBQUtTLGdCQUNMVCxLQUFLVSxnQkFDTFYsS0FBS1csYUFDTFgsS0FBS1ksYUFBYSxDQUNoQmIsTUFBT0MsS0FBS0QsT0FFaEIsQ0FFQVUsZ0JBQ0UsTUFBTUksRUFBUWIsS0FBS04sUUFBUW9CLGNBQWMseUJBQ3pDZCxLQUFLZSxRQUFVQyxPQUFPQyxTQUFTSixFQUFNSyxhQUFhLFlBQ3BELENBRUFSLGdCQUNFVixLQUFLbUIsUUFBVSxJQUFJQyxFQUFBQSxRQUFRcEIsS0FBS0osR0FBSSxDQUNsQ3lCLFNBQVEsRUFDUkMsT0FBTSxFQUNOQyxTQUFVLENBQ1JDLE9BQVEsQ0FBRUMsTUFBTyxHQUNqQkMsS0FBTSxDQUFFRCxNQUFPekIsS0FBS2UsV0FHMUIsQ0FFQUosYUFDRVgsS0FBSzJCLEtBQU8sSUFBSUMsRUFBQUEsS0FBSzVCLEtBQUtKLEdBQUksQ0FDNUJELFNBQVVLLEtBQUtMLFNBQ2Z3QixRQUFTbkIsS0FBS21CLFVBRWhCbkIsS0FBSzJCLEtBQUtFLFVBQVU3QixLQUFLRixNQUMzQixDQUVBYyxjQUFhLE1BQUViLElBQ2JDLEtBQUtELE1BQVFBLEVBQ2JDLEtBQUs4QixPQUFTOUIsS0FBS04sUUFBUXFDLHdCQUMzQi9CLEtBQUtnQyxjQUNMaEMsS0FBS2lDLFVBQ0xqQyxLQUFLa0MsU0FDUCxDQUdBQyxPQUNFQyxFQUFBQSxRQUFBQSxPQUFZcEMsS0FBS21CLFFBQVFJLFNBQVNDLE9BQVEsQ0FDeENDLE1BQU8sR0FDTixDQUNEQSxNQUFPLEdBRVgsQ0FFQVksT0FDRUQsRUFBQUEsUUFBQUEsR0FBUXBDLEtBQUttQixRQUFRSSxTQUFTQyxPQUFRLENBQ3BDQyxNQUFPLEdBRVgsQ0FHQWEsU0FBU3ZDLEVBQU9LLEdBQ2RKLEtBQUtDLE1BQVEsQ0FDWEMsRUFBRyxFQUNIQyxFQUFHLEdBRUxILEtBQUtZLGFBQWFiLEdBQ2xCQyxLQUFLaUMsUUFBUTdCLEdBQVVBLEVBQU9GLEdBQzlCRixLQUFLa0MsUUFBUTlCLEdBQVVBLEVBQU9ELEVBQ2hDLENBR0E2QixjQUNFaEMsS0FBS3VDLE9BQVN2QyxLQUFLOEIsT0FBT1MsT0FBU3ZCLE9BQU93QixZQUMxQ3hDLEtBQUt5QyxNQUFRekMsS0FBSzhCLE9BQU9XLE1BQVF6QixPQUFPMEIsV0FDeEMxQyxLQUFLMkIsS0FBS2dCLE1BQU16QyxFQUFJRixLQUFLRCxNQUFNMEMsTUFBUXpDLEtBQUt5QyxNQUM1Q3pDLEtBQUsyQixLQUFLZ0IsTUFBTXhDLEVBQUlILEtBQUtELE1BQU13QyxPQUFTdkMsS0FBS3VDLE1BQy9DLENBRUFOLFFBQVEvQixFQUFJLEdBQ1ZGLEtBQUtFLEdBQUtGLEtBQUs4QixPQUFPYyxLQUFPMUMsR0FBS2MsT0FBTzBCLFdBQ3pDMUMsS0FBSzJCLEtBQUtrQixTQUFTM0MsR0FBTUYsS0FBS0QsTUFBTTBDLE1BQVEsRUFBTXpDLEtBQUsyQixLQUFLZ0IsTUFBTXpDLEVBQUksRUFBTUYsS0FBS0UsRUFBS0YsS0FBS0QsTUFBTTBDLE1BQVN6QyxLQUFLQyxNQUFNQyxDQUN2SCxDQUVBZ0MsUUFBUS9CLEVBQUksR0FDVkgsS0FBS0csR0FBS0gsS0FBSzhCLE9BQU9nQixJQUFNM0MsR0FBS2EsT0FBT3dCLFlBQ3hDeEMsS0FBSzJCLEtBQUtrQixTQUFTMUMsS0FBUUgsS0FBS0QsTUFBTXdDLE9BQVMsRUFBTXZDLEtBQUsyQixLQUFLZ0IsTUFBTXhDLEVBQUksRUFBTUgsS0FBS0csRUFBS0gsS0FBS0QsTUFBTXdDLE9BQVV2QyxLQUFLQyxNQUFNRSxFQUMzSCxDQUdBNEMsT0FBTzNDLEdBQ0xKLEtBQUtrQyxRQUFROUIsRUFDZixrQkNuSEY0QyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvX3YyLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL0RldGFpbC9NZWRpYS5qcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW9fdjIvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc2gsIFByb2dyYW0gfSBmcm9tICdvZ2wnO1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCc7XG5cblxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCc7XG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZWRpYSB7XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzIH0pIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnk7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICB0aGlzLnNpemVzID0gc2l6ZXM7XG5cbiAgICB0aGlzLmV4dHJhID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDAsXG4gICAgfTtcblxuICAgIHRoaXMuc2Nyb2xsID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIGxhc3Q6IDAsXG4gICAgICBsaW1pdDogMFxuICAgIH1cblxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuY3JlYXRlUHJvZ3JhbSgpO1xuICAgIHRoaXMuY3JlYXRlTWVzaCgpO1xuICAgIHRoaXMuY3JlYXRlQm91bmRzKHtcbiAgICAgIHNpemVzOiB0aGlzLnNpemVzLFxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlVGV4dHVyZSgpIHtcbiAgICBjb25zdCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZGV0YWlsX19tZWRpYV9faW1hZ2UnKVxuICAgIHRoaXMudGV4dHVyZSA9IHdpbmRvdy5URVhUVVJFU1tpbWFnZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJyldO1xuICB9XG5cbiAgY3JlYXRlUHJvZ3JhbSgpIHtcbiAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gICAgICBmcmFnbWVudCxcbiAgICAgIHZlcnRleCxcbiAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgIHVBbHBoYTogeyB2YWx1ZTogMCB9LFxuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0aGlzLnRleHR1cmUgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVNZXNoKCkge1xuICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxuICAgICAgcHJvZ3JhbTogdGhpcy5wcm9ncmFtLFxuICAgIH0pO1xuICAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSk7XG4gIH1cblxuICBjcmVhdGVCb3VuZHMoeyBzaXplcyB9KSB7XG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xuICAgIHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRoaXMudXBkYXRlU2NhbGUoKTtcbiAgICB0aGlzLnVwZGF0ZVgoKTtcbiAgICB0aGlzLnVwZGF0ZVkoKTtcbiAgfVxuXG4gIC8vIEFuaW1hdGlvbnNcbiAgc2hvdygpIHtcbiAgICBHU0FQLmZyb21Ubyh0aGlzLnByb2dyYW0udW5pZm9ybXMudUFscGhhLCB7XG4gICAgICB2YWx1ZTogMCxcbiAgICB9LCB7XG4gICAgICB2YWx1ZTogMSxcbiAgICB9KTtcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgR1NBUC50byh0aGlzLnByb2dyYW0udW5pZm9ybXMudUFscGhhLCB7XG4gICAgICB2YWx1ZTogMFxuICAgIH0pO1xuICB9XG5cbiAgLy8gRXZlbnRzXG4gIG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcbiAgICB0aGlzLmV4dHJhID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDAsXG4gICAgfTtcbiAgICB0aGlzLmNyZWF0ZUJvdW5kcyhzaXplcyk7XG4gICAgdGhpcy51cGRhdGVYKHNjcm9sbCAmJiBzY3JvbGwueCk7XG4gICAgdGhpcy51cGRhdGVZKHNjcm9sbCAmJiBzY3JvbGwueSk7XG4gIH1cblxuICAvLyBMb29wLlxuICB1cGRhdGVTY2FsZSgpIHtcbiAgICB0aGlzLmhlaWdodCA9IHRoaXMuYm91bmRzLmhlaWdodCAvIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICB0aGlzLndpZHRoID0gdGhpcy5ib3VuZHMud2lkdGggLyB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IHRoaXMuc2l6ZXMud2lkdGggKiB0aGlzLndpZHRoO1xuICAgIHRoaXMubWVzaC5zY2FsZS55ID0gdGhpcy5zaXplcy5oZWlnaHQgKiB0aGlzLmhlaWdodDtcbiAgfVxuXG4gIHVwZGF0ZVgoeCA9IDApIHtcbiAgICB0aGlzLnggPSAodGhpcy5ib3VuZHMubGVmdCArIHgpIC8gd2luZG93LmlubmVyV2lkdGg7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPSAoLXRoaXMuc2l6ZXMud2lkdGggLyAyKSArICh0aGlzLm1lc2guc2NhbGUueCAvIDIpICsgKHRoaXMueCAgKiB0aGlzLnNpemVzLndpZHRoKSArIHRoaXMuZXh0cmEueDtcbiAgfVxuXG4gIHVwZGF0ZVkoeSA9IDApIHtcbiAgICB0aGlzLnkgPSAodGhpcy5ib3VuZHMudG9wIC0geSkgLyB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSAtKCgtdGhpcy5zaXplcy5oZWlnaHQgLyAyKSArICh0aGlzLm1lc2guc2NhbGUueSAvIDIpICsgKHRoaXMueSAgKiB0aGlzLnNpemVzLmhlaWdodCkgKyB0aGlzLmV4dHJhLnkpO1xuICB9XG5cblxuICB1cGRhdGUoc2Nyb2xsKSB7XG4gICAgdGhpcy51cGRhdGVZKHNjcm9sbClcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNmRjMGM4MzFjOTkzNDVkNWFlNTFcIikiXSwibmFtZXMiOlsiTWVkaWEiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJnZW9tZXRyeSIsImdsIiwiaW5kZXgiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImV4dHJhIiwieCIsInkiLCJzY3JvbGwiLCJjdXJyZW50IiwidGFyZ2V0IiwibGFzdCIsImxpbWl0IiwiY3JlYXRlVGV4dHVyZSIsImNyZWF0ZVByb2dyYW0iLCJjcmVhdGVNZXNoIiwiY3JlYXRlQm91bmRzIiwiaW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwidGV4dHVyZSIsIndpbmRvdyIsIlRFWFRVUkVTIiwiZ2V0QXR0cmlidXRlIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidUFscGhhIiwidmFsdWUiLCJ0TWFwIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ1cGRhdGVTY2FsZSIsInVwZGF0ZVgiLCJ1cGRhdGVZIiwic2hvdyIsIkdTQVAiLCJoaWRlIiwib25SZXNpemUiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsIndpZHRoIiwiaW5uZXJXaWR0aCIsInNjYWxlIiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9