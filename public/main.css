/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
@charset "UTF-8";
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.item__wrapper__link, .detail__button__icon, .detail__media__image, .detail__gallery, .detail__wrapper, .about__wrapper, .navigation, .preloader, .content, body, html, .home, .detail, .about {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.detail {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.about__contact__list__link, .about__infos__row__text {
  font-size: 1.4rem;
}
@media (max-width: 319px) {
  .about__contact__list__link, .about__infos__row__text {
    font-size: 3rem;
  }
}

.detail__button, .detail__information__technos__text, .detail__information__description__text {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 319px) {
  .detail__button, .detail__information__technos__text, .detail__information__description__text {
    font-size: 2.8rem;
  }
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2rem;
}
@media (max-width: 319px) {
  .navigation__list__link {
    font-size: 4.8rem;
  }
}

.detail__information__link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 319px) {
  .detail__information__link {
    font-size: 5.2rem;
  }
}

.navigation__link, .preloader__text span span {
  font-family: "George X";
  font-size: 6rem;
}

.detail__information__title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}
@media (max-width: 319px) {
  .detail__information__title {
    font-size: 12rem;
  }
}

.item__wrapper__title, .about__title, .preloader__number {
  font-family: "George X";
  font-size: 20rem;
}

.home, .detail, .about {
  opacity: 0;
  visibility: hidden;
  z-index: 2;
}

@font-face {
  font-family: "George X";
  src: url(george-x-regular.c75ba6b7b26bf9b2b94d..woff2) format("woff2"), url(george-x-regular.36edf5ac2ac13e12eb51..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-light.56dec941729d3f292834..woff2) format("woff2"), url(suisse-bp-light.423b609b3fcaa708fd0a..woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-ultra-light.1f44f4370da4374ccd86..woff2) format("woff2"), url(Suisse-bp-ultra-light.67e94c495bfc351ad2d6..woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-regular.7062c878628ecb94ac2a..woff2) format("woff2"), url(suisse-bp-regular.c4a939f6258f7b3f3046..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
*,
*::after,
*::before {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
  position: fixed;
  overflow-x: hidden;
  background: #f8f5f2;
  color: #232323;
}

body {
  font-family: "Suisse BP";
  position: fixed;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

img {
  vertical-align: middle;
  visibility: hidden;
}

canvas {
  pointer-events: none;
  position: relative;
  z-index: 1;
}

.preloader {
  color: #232323;
  background-color: #f8f5f2;
  text-align: center;
  position: fixed;
  overflow-x: hidden;
  z-index: 4;
}

.preloader__text {
  position: absolute;
  top: 7rem;
  left: 50%;
  transform: translateX(-50%);
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
}
@media (max-width: 319px) {
  .preloader__number {
    font-size: 2.4rem;
  }
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  color: #232323;
  pointer-events: none;
  position: fixed;
  z-index: 3;
}

.navigation__link {
  height: 2rem;
  width: 12.8rem;
  pointer-events: auto;
  left: 4rem;
  position: absolute;
  top: 4rem;
}
@media (max-width: 319px) {
  .navigation__link {
    top: 5rem;
    left: 5rem;
    width: 27.9rem;
    height: 4.3rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  pointer-events: auto;
  right: 4rem;
  top: 4rem;
}

.navigation__list__link {
  display: block;
  line-height: 1;
}

.about__title {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 60%;
  opacity: 0.01;
  writing-mode: vertical-rl;
  text-orientation: upright;
}

.about__infos {
  position: absolute;
  top: 30%;
  left: 50%;
  backdrop-filter: blur(0.5rem);
}

.about__infos__row {
  display: flex;
  margin-bottom: 1rem;
}

.about__infos__row__text {
  opacity: 0.8;
  text-align: justify;
  max-width: 40rem;
}

.about__contact {
  position: absolute;
  bottom: 37%;
  left: 25%;
  backdrop-filter: blur(0.5rem);
}

.about__contact__list {
  display: flex;
  flex-direction: column;
}

.about__contact__list__link {
  margin-left: 0.5rem;
  margin-bottom: 0.5rem;
  opacity: 0.8;
  transition: opacity 0.4s ease;
}
.about__contact__list__link:after {
  content: " â†—";
  opacity: 0;
  transition: opacity 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
}
.about__contact__list__link:hover, .about__contact__list__link:hover::after {
  opacity: 0.9;
}

.detail__wrapper {
  display: flex;
  align-items: center;
}

.detail__gallery__wrapper {
  position: absolute;
  top: 50%;
  left: 12%;
  transform: translateY(-20%);
}

.detail__media {
  height: 33.2rem;
  position: relative;
  width: 61.4rem;
}
.detail__media:not(:last-child) {
  margin-bottom: 10rem;
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  position: absolute;
  top: 50%;
  left: 60%;
  transform: translateY(-50%);
}

.detail__information__title {
  max-width: 60rem;
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail__information__description {
  max-width: 44rem;
  padding-bottom: 3rem;
  text-align: justify;
}

.detail__information__description__text {
  letter-spacing: 0.03rem;
  opacity: 0.8;
}

.detail__information__technos {
  max-width: 44rem;
  text-align: justify;
}

.detail__information__technos__text {
  letter-spacing: 0.03rem;
}

.detail__information__link {
  display: inline-block;
  margin-top: 3rem;
}

.detail__button {
  align-items: center;
  display: flex;
  height: 6rem;
  justify-content: center;
  letter-spacing: 0.05rem;
  width: 12.4rem;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  text-transform: uppercase;
  z-index: 2;
}

.home {
  z-index: 0;
}

.home__wrapper {
  height: 100vh;
  overflow: hidden;
}

.item {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  line-height: 1.2;
  padding: 4rem 0;
  text-align: center;
}

.item__wrapper {
  width: 100%;
  overflow: hidden;
  position: relative;
}

.item__wrapper__link {
  z-index: 1;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/