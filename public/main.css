/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
@charset "UTF-8";
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.about__wrapper, .detail__media__image, .detail__gallery, .detail__wrapper, .item__wrapper__link, .alert, .navigation, .preloader, .content, body, html, .about, .detail, .home {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.alert {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail__information__technos__text, .detail__information__description__text {
  font-family: "Switzer";
  font-size: 1.6rem;
}
@media (max-width: 1023px) {
  .detail__information__technos__text, .detail__information__description__text {
    font-size: 2.8rem;
  }
}

.about__contact__list__link, .about__infos__row__text {
  font-family: "Switzer";
  font-size: 2rem;
}
@media (max-width: 1023px) {
  .about__contact__list__link, .about__infos__row__text {
    font-size: 2.8rem;
  }
}

.navigation__list__link {
  font-family: "Khand";
  font-size: 2rem;
}
@media (max-width: 1023px) {
  .navigation__list__link {
    font-size: 2.8rem;
  }
}

.alert__text, .navigation__link, .preloader__text span span {
  font-family: "Khand";
  font-size: 6rem;
}
@media (max-width: 1023px) {
  .alert__text, .navigation__link, .preloader__text span span {
    font-size: 4rem;
  }
}

.detail__information__title {
  font-family: "Khand";
  font-size: 9rem;
  line-height: 1;
}
@media (max-width: 1023px) {
  .detail__information__title {
    font-size: 7rem;
  }
}

.item__wrapper__title, .preloader__number {
  font-family: "Khand";
  font-size: 20rem;
}
@media (max-width: 1023px) {
  .item__wrapper__title, .preloader__number {
    font-size: 8.2rem;
  }
}

.about, .detail, .home {
  opacity: 0;
  visibility: hidden;
  z-index: 2;
}

@font-face {
  font-family: "Khand";
  src: url(Khand-Bold.bc671737a4b0e677dced..woff2) format("woff2"), url(Khand-Bold.237d3fdfed21eacdd618..woff) format("woff");
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Switzer";
  src: url(Switzer-Regular.2ab0f750fdf655eb71e1..woff2) format("woff2"), url(Switzer-Regular.3b4d31f031bb985c9f51..woff) format("woff");
  font-style: normal;
  font-display: swap;
}
*,
*::after,
*::before {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
  position: fixed;
  overflow: hidden;
  background: #fffffe;
  color: #2b2c34;
}
@media (max-width: 1023px) {
  html {
    font-size: 1.3333333333vw;
    position: static;
    overflow-y: visible;
  }
}

body {
  font-family: "Switzer";
  position: fixed;
}
@media (max-width: 1023px) {
  body {
    position: static;
  }
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

img {
  opacity: 0;
  vertical-align: middle;
}
@media (max-width: 1023px) {
  img {
    transition: opacity 0.4s ease;
  }
  img.loaded {
    opacity: 1;
  }
}

canvas {
  pointer-events: none;
  position: relative;
  z-index: 1;
}

.preloader {
  color: #2b2c34;
  background-color: #fffffe;
  text-align: center;
  position: fixed;
  overflow-x: hidden;
  z-index: 4;
}

.preloader__text {
  position: absolute;
  top: 7rem;
  left: 50%;
  transform: translateX(-50%);
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
}
@media (max-width: 1023px) {
  .preloader__number {
    font-size: 2.4rem;
  }
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  color: #2b2c34;
  pointer-events: none;
  position: fixed;
  z-index: 3;
}

.navigation__link {
  pointer-events: auto;
  left: 4rem;
  position: absolute;
  top: 4rem;
  letter-spacing: 0.1rem;
}
@media (max-width: 1023px) {
  .navigation__link {
    top: 5rem;
    left: 5rem;
  }
}

.navigation__list__item {
  position: absolute;
  pointer-events: auto;
  right: 4rem;
  top: 6rem;
}

.navigation__list__link {
  display: block;
  line-height: 1;
  letter-spacing: 0.1rem;
}

.alert {
  opacity: 0;
  color: #2b2c34;
  background-color: #fffffe;
  pointer-events: none;
  position: fixed;
  z-index: 5;
}

.home {
  z-index: 0;
}
.home::after {
  content: "";
  position: absolute;
  left: 0;
  width: 100%;
  background: linear-gradient(to top, #fffffe 15%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
  height: 10vh;
}
@media (max-width: 1023px) {
  .home::after {
    content: none;
  }
}

.home__wrapper {
  padding-top: 30rem;
}
@media (max-width: 1023px) {
  .home__wrapper {
    padding-top: 15rem;
  }
}

.item {
  line-height: 1.4;
  padding: 4rem 0;
  text-align: center;
}
@media (max-width: 1023px) {
  .item {
    padding: 10rem 0;
  }
}

.item__wrapper {
  position: relative;
}

.item__wrapper__link {
  z-index: 1;
}

.item__wrapper__title {
  letter-spacing: 1.1rem;
}

.detail__wrapper {
  display: flex;
  align-items: center;
}
@media (max-width: 1023px) {
  .detail__wrapper {
    flex-direction: column;
    position: static;
  }
}

@media (max-width: 1023px) {
  .detail__gallery {
    position: static;
    height: 0%;
  }
}

.detail__gallery__wrapper {
  position: absolute;
  top: 30%;
  left: 12%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media (max-width: 1023px) {
  .detail__gallery__wrapper {
    position: static;
    margin-top: 80rem;
    padding-bottom: 10rem;
  }
}

.detail__media {
  height: 33.2rem;
  position: relative;
  width: 68.8rem;
}
.detail__media:not(:last-child) {
  margin-bottom: 10rem;
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  position: absolute;
  top: 50%;
  left: 56%;
  transform: translateY(-50%);
}
@media (max-width: 1023px) {
  .detail__information {
    position: static;
    transform: none;
    padding-top: 20rem;
  }
}

.detail__information__title {
  letter-spacing: 0.7rem;
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail__information__description {
  max-width: 44rem;
  padding-bottom: 3rem;
  text-align: justify;
}

.detail__information__description__text {
  letter-spacing: 0.1rem;
  opacity: 0.8;
  line-height: 1.3;
}

.detail__information__technos {
  max-width: 44rem;
  text-align: justify;
}

.detail__information__technos__text {
  letter-spacing: 0.09rem;
  line-height: 1.3;
}

.about__frame {
  position: absolute;
  top: 35%;
  transform: translateX(-50%);
  left: 50%;
  width: 50rem;
}
@media (max-width: 1023px) {
  .about__frame {
    top: 20%;
    width: 60rem;
  }
}

.about__infos__row {
  margin-bottom: 1rem;
}

.about__infos__row__text {
  opacity: 0.8;
  text-align: justify;
  line-height: 1.3;
  letter-spacing: 0.1rem;
}

.about__contact__list {
  margin-top: 2rem;
}
@media (max-width: 1023px) {
  .about__contact__list {
    margin-top: 10rem;
    display: flex;
    flex-direction: column;
  }
}

.about__contact__list__link {
  margin-right: 1.5rem;
  letter-spacing: 0.08rem;
}
.about__contact__list__link:after {
  content: " â†— ";
  opacity: 0;
  transition: opacity 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
}
.about__contact__list__link:hover::after {
  opacity: 0.9;
}
@media (max-width: 1023px) {
  .about__contact__list__link {
    margin: 0 0 5rem 0;
    text-align: center;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/