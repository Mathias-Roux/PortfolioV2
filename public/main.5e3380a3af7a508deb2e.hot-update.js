/*! For license information please see main.5e3380a3af7a508deb2e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio_v2("main",{"./app/components/Preloader.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var s=n("./node_modules/gsap/index.js"),o=n("./node_modules/lodash/each.js"),a=n.n(o),r=n("./node_modules/ogl/src/core/Texture.js"),i=n("./app/classes/Component.js");class d extends i.default{constructor({canvas:e}){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text"}}),this.canvas=e,window.TEXTURES={};const t=document.querySelector(".preloader__text"),n=t.getAttribute("data-text");a()(n,(e=>{t.innerHTML+=`<span><span>${e}</span></span>`})),this.titleLetters=document.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){a()(window.ASSETS,(e=>{const t=new r.Texture(this.canvas.gl,{generateMipMaps:!1}),n=new window.Image;n.crossOrigin="anonymous",n.src=e,n.onload=e=>{t.image=n,this.onAssetLoaded()},window.TEXTURES[e]=t}))}onAssetLoaded(){this.length++;const e=this.length/window.ASSETS.length;this.elements.numberText.innerHTML=`${Math.round(100*e)}%`,1===e&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.emit("completed"),this.animateOut=s.default.timeline({delay:1}),this.animateOut.to(this.titleLetters,{duration:1.5,ease:"expo.out",x:"-100%"}),this.animateOut.to(this.elements.numberText,{duration:1.5,ease:"expo.out",y:"150%"},"-=1.5"),this.animateOut.to(this.element,{autoAlpha:0,duration:1},"-=0.5"),this.animateOut.call((e=>{this.destroy()}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"644390414639169b1354"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi41ZTMzODBhM2FmN2E1MDhkZWIyZS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cVNBT2UsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3JDQyxhQUFZLE9BQUVDLElBQ1pDLE1BQU0sQ0FDSkMsUUFBUyxhQUNUQyxTQUFVLENBQ1JDLE1BQU8sbUJBQ1BDLE9BQVEscUJBQ1JDLFdBQVksOEJBSWhCQyxLQUFLUCxPQUFTQSxFQUVkUSxPQUFPQyxTQUFXLENBQUMsRUFFbkIsTUFBTUwsRUFBUU0sU0FBU0MsY0FBYyxvQkFFL0JDLEVBQWFSLEVBQU1TLGFBQWEsYUFFdENDLElBQUtGLEdBQVlHLElBQ2ZYLEVBQU1ZLFdBQWMsZUFBY0QsaUJBQXNCLElBRzFEUixLQUFLVSxhQUFlUCxTQUFTUSxpQkFBaUIsYUFFOUNYLEtBQUtZLE9BQVMsRUFFZFosS0FBS2EsY0FDUCxDQUVBQSxlQUNFTixJQUFLTixPQUFPYSxRQUFRQyxJQUNsQixNQUFNQyxFQUFVLElBQUlDLEVBQUFBLFFBQVFqQixLQUFLUCxPQUFPeUIsR0FBSSxDQUMxQ0MsaUJBQWlCLElBR2JDLEVBQVEsSUFBSW5CLE9BQU9vQixNQUV6QkQsRUFBTUUsWUFBYyxZQUNwQkYsRUFBTUcsSUFBTVIsRUFDWkssRUFBTUksT0FBU0MsSUFDYlQsRUFBUUQsTUFBUUssRUFFaEJwQixLQUFLMEIsZUFBZSxFQUd0QnpCLE9BQU9DLFNBQVNhLEdBQVNDLENBQU8sR0FFcEMsQ0FFQVUsZ0JBQ0UxQixLQUFLWSxTQUVMLE1BQU1lLEVBQVUzQixLQUFLWSxPQUFTWCxPQUFPYSxPQUFPRixPQUU1Q1osS0FBS0osU0FBU0csV0FBV1UsVUFBYSxHQUFFbUIsS0FBS0MsTUFBZ0IsSUFBVkYsTUFFbkMsSUFBWkEsR0FDRjNCLEtBQUs4QixVQUVULENBRUFBLFdBQ0UsT0FBTyxJQUFJQyxTQUFRQyxJQUNqQmhDLEtBQUtpQyxLQUFLLGFBRVZqQyxLQUFLa0MsV0FBYUMsRUFBQUEsUUFBQUEsU0FBYyxDQUM5QkMsTUFBTyxJQUdUcEMsS0FBS2tDLFdBQVdHLEdBQUdyQyxLQUFLVSxhQUFjLENBQ3BDNEIsU0FBVSxJQUNWQyxLQUFNLFdBQ05DLEVBQUcsVUFHTHhDLEtBQUtrQyxXQUFXRyxHQUFHckMsS0FBS0osU0FBU0csV0FBWSxDQUMzQ3VDLFNBQVUsSUFDVkMsS0FBTSxXQUNORSxFQUFHLFFBQ0YsU0FFSHpDLEtBQUtrQyxXQUFXRyxHQUFHckMsS0FBS0wsUUFBUyxDQUMvQitDLFVBQVcsRUFDWEosU0FBVSxHQUNULFNBRUh0QyxLQUFLa0MsV0FBV1MsTUFBS2xCLElBQ25CekIsS0FBSzRDLFNBQVMsR0FDZCxHQUVOLENBRUFBLFVBQ0U1QyxLQUFLTCxRQUFRa0QsV0FBV0MsWUFBWTlDLEtBQUtMLFFBQzNDLGtCQ3RHRm9ELEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW9fdjIvLi9hcHAvY29tcG9uZW50cy9QcmVsb2FkZXIuanMiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvX3YyL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xuaW1wb3J0IGVhY2ggZnJvbSAnbG9kYXNoL2VhY2gnXG5pbXBvcnQgeyBUZXh0dXJlIH0gZnJvbSAnb2dsJ1xuXG5pbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuLi9jbGFzc2VzL0NvbXBvbmVudFwiO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRlciBleHRlbmRzIENvbXBvbmVudHtcbiAgY29uc3RydWN0b3IoeyBjYW52YXMgfSl7XG4gICAgc3VwZXIoe1xuICAgICAgZWxlbWVudDogJy5wcmVsb2FkZXInLFxuICAgICAgZWxlbWVudHM6IHtcbiAgICAgICAgdGl0bGU6ICcucHJlbG9hZGVyX190ZXh0JyxcbiAgICAgICAgbnVtYmVyOiAnLnByZWxvYWRlcl9fbnVtYmVyJyxcbiAgICAgICAgbnVtYmVyVGV4dDogJy5wcmVsb2FkZXJfX251bWJlcl9fdGV4dCdcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXNcblxuICAgIHdpbmRvdy5URVhUVVJFUyA9IHt9XG5cbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcmVsb2FkZXJfX3RleHQnKVxuXG4gICAgY29uc3QgdGl0bGVEYXRhcyA9IHRpdGxlLmdldEF0dHJpYnV0ZSgnZGF0YS10ZXh0JylcblxuICAgIGVhY2godGl0bGVEYXRhcywgbGV0dGVyID0+IHtcbiAgICAgIHRpdGxlLmlubmVySFRNTCArPSBgPHNwYW4+PHNwYW4+JHtsZXR0ZXJ9PC9zcGFuPjwvc3Bhbj5gXG4gICAgfSlcblxuICAgIHRoaXMudGl0bGVMZXR0ZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3BhbiBzcGFuJylcblxuICAgIHRoaXMubGVuZ3RoID0gMFxuXG4gICAgdGhpcy5jcmVhdGVMb2FkZXIoKVxuICB9XG5cbiAgY3JlYXRlTG9hZGVyKCl7XG4gICAgZWFjaCh3aW5kb3cuQVNTRVRTLCBpbWFnZSA9PiB7XG4gICAgICBjb25zdCB0ZXh0dXJlID0gbmV3IFRleHR1cmUodGhpcy5jYW52YXMuZ2wsIHtcbiAgICAgICAgZ2VuZXJhdGVNaXBNYXBzOiBmYWxzZVxuICAgICAgfSlcblxuICAgICAgY29uc3QgbWVkaWEgPSBuZXcgd2luZG93LkltYWdlKClcblxuICAgICAgbWVkaWEuY3Jvc3NPcmlnaW4gPSAnYW5vbnltb3VzJ1xuICAgICAgbWVkaWEuc3JjID0gaW1hZ2VcbiAgICAgIG1lZGlhLm9ubG9hZCA9IF8gPT4ge1xuICAgICAgICB0ZXh0dXJlLmltYWdlID0gbWVkaWFcblxuICAgICAgICB0aGlzLm9uQXNzZXRMb2FkZWQoKVxuICAgICAgfVxuXG4gICAgICB3aW5kb3cuVEVYVFVSRVNbaW1hZ2VdID0gdGV4dHVyZVxuICAgIH0pXG4gIH1cblxuICBvbkFzc2V0TG9hZGVkKCl7XG4gICAgdGhpcy5sZW5ndGgrK1xuXG4gICAgY29uc3QgcGVyY2VudCA9IHRoaXMubGVuZ3RoIC8gd2luZG93LkFTU0VUUy5sZW5ndGhcblxuICAgIHRoaXMuZWxlbWVudHMubnVtYmVyVGV4dC5pbm5lckhUTUwgPSBgJHtNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApfSVgXG5cbiAgICBpZiAocGVyY2VudCA9PT0gMSkge1xuICAgICAgdGhpcy5vbkxvYWRlZCgpXG4gICAgfVxuICB9XG5cbiAgb25Mb2FkZWQoKXtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICB0aGlzLmVtaXQoJ2NvbXBsZXRlZCcpXG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dCA9IEdTQVAudGltZWxpbmUoe1xuICAgICAgICBkZWxheTogMVxuICAgICAgfSlcblxuICAgICAgdGhpcy5hbmltYXRlT3V0LnRvKHRoaXMudGl0bGVMZXR0ZXJzLCB7XG4gICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgIGVhc2U6ICdleHBvLm91dCcsXG4gICAgICAgIHg6ICctMTAwJSdcbiAgICAgIH0pXG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC50byh0aGlzLmVsZW1lbnRzLm51bWJlclRleHQsIHtcbiAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgZWFzZTogJ2V4cG8ub3V0JyxcbiAgICAgICAgeTogJzE1MCUnXG4gICAgICB9LCAnLT0xLjUnKVxuXG4gICAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50LCB7XG4gICAgICAgIGF1dG9BbHBoYTogMCxcbiAgICAgICAgZHVyYXRpb246IDFcbiAgICAgIH0sICctPTAuNScpXG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC5jYWxsKF8gPT4ge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgZGVzdHJveSgpe1xuICAgIHRoaXMuZWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudClcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNjQ0MzkwNDE0NjM5MTY5YjEzNTRcIikiXSwibmFtZXMiOlsiUHJlbG9hZGVyIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJzdXBlciIsImVsZW1lbnQiLCJlbGVtZW50cyIsInRpdGxlIiwibnVtYmVyIiwibnVtYmVyVGV4dCIsInRoaXMiLCJ3aW5kb3ciLCJURVhUVVJFUyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRpdGxlRGF0YXMiLCJnZXRBdHRyaWJ1dGUiLCJlYWNoIiwibGV0dGVyIiwiaW5uZXJIVE1MIiwidGl0bGVMZXR0ZXJzIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsImNyZWF0ZUxvYWRlciIsIkFTU0VUUyIsImltYWdlIiwidGV4dHVyZSIsIlRleHR1cmUiLCJnbCIsImdlbmVyYXRlTWlwTWFwcyIsIm1lZGlhIiwiSW1hZ2UiLCJjcm9zc09yaWdpbiIsInNyYyIsIm9ubG9hZCIsIl8iLCJvbkFzc2V0TG9hZGVkIiwicGVyY2VudCIsIk1hdGgiLCJyb3VuZCIsIm9uTG9hZGVkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJlbWl0IiwiYW5pbWF0ZU91dCIsIkdTQVAiLCJkZWxheSIsInRvIiwiZHVyYXRpb24iLCJlYXNlIiwieCIsInkiLCJhdXRvQWxwaGEiLCJjYWxsIiwiZGVzdHJveSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==