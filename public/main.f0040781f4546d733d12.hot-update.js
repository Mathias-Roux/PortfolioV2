/*! For license information please see main.f0040781f4546d733d12.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio_v2("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>u});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/prefix/index.js"),r=s.n(n),l=s("./node_modules/lodash/each.js"),o=s.n(l),a=s("./node_modules/lodash/map.js"),h=s.n(a),c=s("./app/utils/dom.js"),d=s("./app/classes/AsyncLoad.js"),m=s("./app/classes/Detection.js");Object(function(){var e=new Error("Cannot find module 'animations/Paragraph'");throw e.code="MODULE_NOT_FOUND",e}());class u{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,preloaders:"[data-src]",animationsParagraphs:'[data-animation="paragraph"]'},this.id=s,this.alert=document.querySelector(".alert"),this.transformPrefix=r()("transform")}create(){this.element=document.querySelector(this.selector),this.elements={},m.default.isDesktop()||(window.pageYOffset=0,document.documentElement.scrollTop=0,document.body.scrollTop=0),this.scroll={current:0,target:0,last:0,limit:0},this.y={start:0,end:0},o()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations(),!m.default.isDesktop()&&this.createPreloader()}createAnimations(){this.animationsParagraphs=(0,c.mapEach)(this.elements.animationsParagraphs,(e=>new Object(function(){var e=new Error("Cannot find module 'animations/Paragraph'");throw e.code="MODULE_NOT_FOUND",e}())({element:e})))}createPreloader(){this.preloaders=h()(this.elements.preloaders,(e=>new d.default({element:e})))}show(e){return new Promise((t=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0,y:`${e}`},{scrollTop:0,autoAlpha:1,y:0}),this.animationIn.call((e=>{this.addEventListeners(),t()}))}))}hide(e){return new Promise((t=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{y:`-${e}`,autoAlpha:0,onComplete:t})}))}onResize(){this.scroll.last=this.scroll.target=0,this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),m.default.isDesktop()||(window.innerHeight<window.innerWidth?this.alert.style.opacity=1:this.alert.style.opacity=0)}onTouchDown(e){this.isDown=!0,this.y.start=e.touches?e.touches[0].clientY:e.clientY,this.scroll.last=this.scroll.current}onTouchMove(e){if(!this.isDown)return;const t=e.touches?e.touches[0].clientY:e.clientY;this.y.end=t;const s=this.y.start-this.y.end;this.scroll.target=this.scroll.last+s}onTouchUp(e){this.isDown=!1}onWheel({pixelY:e}){this.scroll.target+=e}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&m.default.isDesktop()&&(this.elements.wrapper.style[this.transformPrefix]=`translate3d(0, -${this.scroll.current}px, 0)`)}addEventListeners(){}removeEventListeners(){}}}},(function(e){e.h=()=>"6a58437d67a0b9248cc7"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,